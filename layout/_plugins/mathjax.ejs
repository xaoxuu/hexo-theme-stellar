<% if (conf.v3) { %>
<script>
  window.MathJax = {
    tex: {
      inlineMath: [
        ["$", "$"],
        ["\\(", "\\)"],
      ],
      processEscapes: true,
      skipTags: ["script", "noscript", "style", "textarea", "pre", "code"],
    },
    startup: {
      ready() {
        MathJax.startup.defaultReady();
        MathJax.typesetPromise().then(() => {
          const math = document.querySelectorAll("mjx-container");
          math.forEach((element) => {
            if (element.parentNode) {
              element.parentNode.classList.add("has-jax");
            }
          });
        });
      },
    },
  };
</script>
<% } %>
<script id="MathJax-script" src="<%- conf.js %>" async></script>
<% if (!conf.v3) { %>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
      processEscapes: true
    }
  });
  MathJax.Hub.Config({
    tex2jax: {
      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
    }
  });
  MathJax.Hub.Queue(function() {
    var all = MathJax.Hub.getAllJax(), i;
    for(i=0; i < all.length; i += 1) {
      all[i].SourceElement().parentNode.className += ' has-jax';
    }
  });
</script>
<% } %>
